<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2022-01-23T16:33:16+01:00</updated><id>/feed.xml</id><title type="html">Megan writes about things</title><subtitle>Where I write about code, data, and math. </subtitle><entry><title type="html">Welcome to Jekyll!</title><link href="/jekyll/update/2022/01/23/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2022-01-23T13:36:07+01:00</published><updated>2022-01-23T13:36:07+01:00</updated><id>/jekyll/update/2022/01/23/welcome-to-jekyll</id><content type="html" xml:base="/jekyll/update/2022/01/23/welcome-to-jekyll.html"><![CDATA[You’ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run `jekyll serve`, which launches a web server and auto-regenerates your site when a file is updated.

To add new posts, simply add a file in the `_posts` directory that follows the convention `YYYY-MM-DD-name-of-post.ext` and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.

Jekyll also offers powerful support for code snippets:

{% highlight ruby %}
def print_hi(name)
  puts "Hi, #{name}"
end
print_hi('Tom')
#=> prints 'Hi, Tom' to STDOUT.
{% endhighlight %}

Check out the [Jekyll docs][jekyll-docs] for more info on how to get the most out of Jekyll. File all bugs/feature requests at [Jekyll’s GitHub repo][jekyll-gh]. If you have questions, you can ask them on [Jekyll Talk][jekyll-talk].

[jekyll-docs]: https://jekyllrb.com/docs/home
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-talk]: https://talk.jekyllrb.com/]]></content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.]]></summary></entry><entry><title type="html">testing Jekyll!2</title><link href="/python/algorithms/2021/03/02/advent-of-code.html" rel="alternate" type="text/html" title="testing Jekyll!2" /><published>2021-03-02T00:13:37+01:00</published><updated>2021-03-02T00:13:37+01:00</updated><id>/python/algorithms/2021/03/02/advent-of-code</id><content type="html" xml:base="/python/algorithms/2021/03/02/advent-of-code.html"><![CDATA[<h2 id="the-advent-of-code-in-january">The Advent of Code in January?</h2>

<p>It might sound a little odd, talking about the <a href="https://adventofcode.com/">adventofcode</a> in January, but every year I start it and every year I forget that December is an extremely busy month. Between holiday plans and end of the year work projects, I usually only get to some of the puzzles in the coding advent calendar. Then I celebrate the new year and put it aside until next year.</p>

<p>This time, I decided to do something a bit different. I am continuing into January. The puzzles are fun. Kind of a coding refresh for the brain. They are also a different style of problem than I usually solve, and I enjoy expanding my knowledge. I work with the same algorithms for work, and these push me. It keeps things fresh and interesting.</p>

<p>You can visit their site and try out past advents of code beginning in 2015. I recommend it.</p>

<p><a href="https://github.com/megpay/advent-of-code-2021">Code Repo</a></p>]]></content><author><name></name></author><category term="Python" /><category term="algorithms" /><summary type="html"><![CDATA[The Advent of Code in January?]]></summary></entry></feed>